{"version":3,"sources":["Components/Card.js","Components/Cardlist.js","Components/Searchbox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","name","email","react_default","a","createElement","className","alt","src","concat","Cardlist","_ref","robots","map","user","i","Components_Card","key","username","Searchbox","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchField","target","value","state","_this2","fetch","then","response","json","_this3","filteredRobots","filter","robot","toLowerCase","includes","length","Components_Searchbox","Components_Scroll","Components_Cardlist","React","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Containers_App"],"mappings":"yNAiBeA,EAdF,SAACC,GAAU,IACbC,EAAqBD,EAArBC,GAAKC,EAAgBF,EAAhBE,KAAOC,EAASH,EAATG,MACnB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BT,KAC/CG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKJ,GACLE,EAAAC,EAAAC,cAAA,SAAIH,MCeLQ,EArBE,SAAAC,GAAc,IAAZC,EAAYD,EAAZC,OACf,OACIT,EAAAC,EAAAC,cAAA,WAEQO,EAAOC,IAAI,SAACC,EAAMC,GACd,OACIZ,EAAAC,EAAAC,cAACW,EAAD,CACAC,IAAKF,EACLf,GAAIc,EAAKd,GACTC,KAAMa,EAAKb,KACXC,MAAOY,EAAKZ,MACZgB,SAAUJ,EAAKI,eCAxBC,EAZG,SAAAR,GAAmB,IAAjBS,EAAiBT,EAAjBS,aAChB,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,SACIC,UAAU,mCACVe,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCPI,EATA,SAACzB,GACZ,OACII,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAACC,SAAU,SAAWC,OAAQ,oBAAqBC,OAAO,UACjE7B,EAAM8B,WCwCJC,qBArCb,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAYFI,eAAiB,SAACC,GAChBR,EAAKS,SAAS,CAACC,YAAcF,EAAMG,OAAOC,SAZ1CZ,EAAKa,MAAQ,CACXhC,OAAS,GACT6B,YAAc,IAJLV,mFAOM,IAAAc,EAAAX,KACjBY,MAAM,8CACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAjC,GAAI,OAAI+B,EAAKL,SAAS,CAAC5B,OAAOE,uCAMhC,IAAAoC,EAAAhB,KAEAiB,EAAiBjB,KAAKU,MAAMhC,OAAOwC,OAAO,SAACC,GAC/C,OAAOA,EAAMpD,KAAKqD,cAAcC,SAASL,EAAKN,MAAMH,YAAYa,iBAIlE,OAAqC,IAA7BpB,KAAKU,MAAMhC,OAAO4C,OAAgBrD,EAAAC,EAAAC,cAAA,qBACtCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,eACAH,EAAAC,EAAAC,cAACoD,EAAD,CAAWrC,aAAcc,KAAKI,iBAC9BnC,EAAAC,EAAAC,cAACqD,EAAD,KACEvD,EAAAC,EAAAC,cAACsD,EAAD,CAAU/C,OAAUuC,aA7BhBS,IAAMC,YCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAnB,KAAAkB,EAAAE,KAAA,UAAqBpB,KAAK,SAAApC,GAAiD,IAA9CyD,EAA8CzD,EAA9CyD,OAAQC,EAAsC1D,EAAtC0D,OAAQC,EAA8B3D,EAA9B2D,OAAQC,EAAsB5D,EAAtB4D,OAAQC,EAAc7D,EAAd6D,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCGDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH1E,EAAAC,EAAAC,cAACF,EAAAC,EAAM0E,WAAP,KACC3E,EAAAC,EAAAC,cAAC0E,EAAD,QAOHjB","file":"static/js/main.c8fe0956.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Card = (props) => {\r\n    const {id , name , email} = props;\r\n    return( \r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\n\r\nconst Cardlist = ({robots}) => {\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user ,i) => {\r\n                    return (\r\n                        <Card \r\n                        key={i} \r\n                        id={user.id} \r\n                        name={user.name} \r\n                        email={user.email} \r\n                        username={user.username} />\r\n                    )\r\n                    })\r\n            }\r\n      </div>\r\n    \r\n    );\r\n\r\n}\r\n\r\nexport default Cardlist","import React from \"react\";\r\n\r\n\r\nconst Searchbox = ({searchChange}) =>{\r\n    return(\r\n        <div className=\"pa2\">\r\n        <input \r\n            className=\"pa3 ba b--green bg-lightest-blue\"\r\n            type='search' \r\n            placeholder=\"Search-Robots\"\r\n            onChange={searchChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchbox","import React from \"react\";\r\n\r\nconst Scroll = (props) =>{ \r\n    return(\r\n        <div style={{overflow: 'scroll' , border: '5px solid #E8F9FD', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    ) \r\n  \r\n}\r\n\r\nexport default Scroll;","import React from 'react';\nimport Cardlist from '../Components/Cardlist';\nimport Searchbox from '../Components/Searchbox'\nimport Scroll from '../Components/Scroll'\n// import {robots} from './robots'\nimport './App.css'\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      robots : [],\n      searchField : ''\n    }\n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(user => this.setState({robots:user}))\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchField : event.target.value });\n  }\n  render(){\n    \n    const filteredRobots = this.state.robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n    });\n\n\n    return (this.state.robots.length === 0) ? <h1>Loading</h1> : (\n        <div className='tc'>\n            <h1 className='f1'>RoboFriends</h1>\n            <Searchbox searchChange={this.onSearchChange} />\n            <Scroll>\n              <Cardlist robots = {filteredRobots}/>\n            </Scroll> \n        </div>\n        \n      );\n    }\n    \n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './Containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n// import { robots } from './robots';\n// import Card from './Card'\n// import Cardlist from './Cardlist'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n   <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}